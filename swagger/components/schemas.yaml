# schemas:
#   RegisterUserRequest:
#     type: object
#     required:
#       - email
#       - password
#     properties:
#       email:
#         type: string
#         format: email
#         example: user@example.com
#       password:
#         type: string
#         format: password
#         example: password123
#   LoginUserRequest:
#     type: object
#     required:
#       - email
#       - password
#     properties:
#       email:
#         type: string
#         format: email
#         example: user@example.com
#       password:
#         type: string
#         format: password
#         example: password123

#   UserResponse:
#     type: object
#     properties:
#       id:
#         type: string
#         example: 60d0fe4f5311236168a109ca
#       userName:
#         type: string
#         example: User
#       email:
#         type: string
#         format: email
#         example: user@example.com
#       dailyNorma:
#         type: number
#         example: 2000
#       gender:
#         type: string
#         enum: [Man, Woman]
#         example: Man
#       photo:
#         type: string
#         example: http://example.com/photo.jpg
# SendResetEmailRequest:
#           type: object
#           required:
#             - email
#           properties:
#             email:
#               type: string
#               format: email
#               example: john.doe@example.com
# ResetPasswordRequest:
#           type: object
#           required:
#             - token
#             - password
#           properties:
#             token:
#               type: string
#               example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
#             password:
#               type: string
#               format: password
#               example: newpassword123
# UpdateAvatarRequest:
#     type: object
#     properties:
#       avatar:
#         type: string
#         format: binary
#         description: The avatar image file to upload
#     required:
#       - avatar
# UpdateUserRequest:
#     type: object
#     properties:
#       email:
#         type: string
#         format: email
#         example: newUser@example.com
#       currentPassword:
#         type: string
#         format: password
#         example: oldPassword123
#       newPassword:
#         type: string
#         format: password
#         example: newPassword123
#       confirmPassword:
#         type: string
#         format: password
#         example: newPassword123
#       userName:
#         type: string
#         example: User
#       dailyNorma:
#         type: number
#         example: 2000
#       gender:
#         type: string
#         enum: [Man, Woman]
#         example: Man
# components:
#   schemas:
#     RequestResetEmail:
#       type: object
#       required:
#         - email
#       properties:
#         email:
#           type: string
#           format: email
#           example: user@example.com

#     ResetPasswordRequest:
#       type: object
#       required:
#         - token
#         - password
#       properties:
#         token:
#           type: string
#           example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
#         password:
#           type: string
#           format: password
#           example: newPassword123

#     GoogleOAuthUrlResponse:
#       type: object
#       required:
#         - email
#       properties:
#         email:
#           type: string
#           format: email
#           example: user@example.com
#     LoginWithGoogleRequest:
#       type: object
#       required:
#         - code
#       properties:
#         code:
#           type: string
#           example: 4/0AY0e-g7Qq2fmmls7Qq2fmmls