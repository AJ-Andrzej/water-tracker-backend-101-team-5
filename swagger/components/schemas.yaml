# /swagger/components/schemas.yaml

schemas:
  RegisterUserRequest:
    type: object
    required:
      - email
      - password
    properties:
      userName:
        type: string
        example: User
      email:
        type: string
        format: email
        example: user@example.com
      password:
        type: string
        format: password
        example: password123

  LoginUserRequest:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        example: user@example.com
      password:
        type: string
        format: password
        example: password123

  UserResponse:
    type: object
    properties:
      id:
        type: string
        example: 60d0fe4f5311236168a109ca
      userName:
        type: string
        example: User
      email:
        type: string
        format: email
        example: user@example.com
      dailyNorma:
        type: number
        example: 2000
      gender:
        type: string
        enum: [Man, Woman]
        example: Man
      photo:
        type: string
        example: http://example.com/photo.jpg

  LoginResponse:
    type: object
    properties:
      accessToken:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  SuccessResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: User profile updated successfully

  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 404
      message:
        type: string
        example: Not Found
UpdateAvatarRequest:
    type: object
    properties:
      avatar:
        type: string
        format: binary
        description: The avatar image file to upload
    required:
      - avatar
   AvatarResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Avatar updated successfully
      data:
        type: object
        properties:
          avatarUrl:
            type: string
            example: http://example.com/uploads/avatar.jpg
UpdateUserRequest:
    type: object
    properties:
      email:
        type: string
        format: email
        example: newUser@example.com
      currentPassword:
        type: string
        format: password
        example: oldPassword123
      newPassword:
        type: string
        format: password
        example: newPassword123
      confirmPassword:
        type: string
        format: password
        example: newPassword123
      userName:
        type: string
        example: User
      dailyNorma:
        type: number
        example: 2000
      gender:
        type: string
        enum: [Man, Woman]
        example: Man

  # User:
  #   type: object
  #   properties:
  #     userName:
  #       type: string
  #       example: 'User'
  #     dailyNorma:
  #       type: number
  #       example: 1500
  #     email:
  #       type: string
  #       example: 'user@example.com'
  #     gender:
  #       type: string
  #       enum: ['Man', 'Woman']
  #     photo:
  #       type: string
  #       example: 'http://example.com/photo.jpg'
