{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker app",
    "description": "This is a documentation of Water Tracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://water-tracker-backend-101-team-5.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Water",
      "description": "Water intake operations."
    }
  ],
  "paths": {
    "/water/delete": {
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete a water intakes",
        "operationId": "delateWater",
        "description": "Delete a water intakes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66c4b8bd4719066469ce2d02"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete a water intakes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted water intakes"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/update": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update a water intakes",
        "operationId": "updateWater",
        "description": "Update a water intakes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66c4b8bd4719066469ce2d02"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "description": "Update time in add water",
                    "type": "string",
                    "example": "11:35"
                  },
                  "amount": {
                    "description": "Update amount of users water",
                    "type": "number",
                    "example": 245
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update a water intakes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a water intakes!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/daily-norma": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Set daily norma of user",
        "operationId": "waterId",
        "description": "Set daily norma of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dailyNorm"
                ],
                "properties": {
                  "dailyNorma": {
                    "description": "Daily norma of water",
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Set daily norm of water",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully add a water daily norma!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/add": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Set add water of user",
        "operationId": "dailyNorm",
        "description": "Post daily norma of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "time",
                  "amount"
                ],
                "properties": {
                  "time": {
                    "description": "Add time of water",
                    "type": "string",
                    "example": "11:35"
                  },
                  "amount": {
                    "description": "Set amount of water",
                    "type": "number",
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add a water intakes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added a water intakes!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get list of daily water",
        "operationId": "getDailyWater",
        "description": "Get list of daily water with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Daily water intake retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found daily water!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "percentage",
                        "waterIntakes"
                      ],
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "properties": {
                            "percentage": {
                              "description": "Percentage of daily water",
                              "type": "number",
                              "example": "63"
                            }
                          }
                        },
                        "waterIntakes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "userId",
                              "amount",
                              "time",
                              "date"
                            ],
                            "properties": {
                              "_id": {
                                "description": "Id of users object",
                                "type": "string",
                                "example": "66c4b8bd4719066469ce2d02"
                              },
                              "userId": {
                                "description": "Id of user",
                                "type": "string",
                                "example": "66c4b8bd4719066469ce2d02"
                              },
                              "amount": {
                                "description": "Amount of water",
                                "type": "number",
                                "example": 450
                              },
                              "time": {
                                "description": "Time of add water",
                                "type": "string",
                                "example": "11:35"
                              },
                              "date": {
                                "description": "Date of water",
                                "type": "string",
                                "example": "2024-09-02"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/month": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Get list of monthly water",
        "operationId": "getMonthlyWater",
        "description": "Get list of monthly water with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "year",
                  "month"
                ],
                "properties": {
                  "year": {
                    "description": "year according to which you need to search",
                    "type": "string",
                    "example": "2024"
                  },
                  "month": {
                    "description": "Month according to which you need to search",
                    "type": "string",
                    "example": "08"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Monthly water intake retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Monthly water intake retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/monthlyWater"
                      },
                      "properties": {
                        "percentage": {
                          "type": "number",
                          "properties": {
                            "percentage": {
                              "description": "Percentage of daily water",
                              "type": "number",
                              "example": "63"
                            }
                          }
                        },
                        "waterIntakes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "userId",
                              "amount",
                              "time",
                              "date"
                            ],
                            "properties": {
                              "_id": {
                                "description": "Id of users object",
                                "type": "string",
                                "example": "66c4b8bd4719066469ce2d02"
                              },
                              "userId": {
                                "description": "Id of user",
                                "type": "string",
                                "example": "66c4b8bd4719066469ce2d02"
                              },
                              "amount": {
                                "description": "Amount of water",
                                "type": "number",
                                "example": 450
                              },
                              "time": {
                                "description": "Time of add water",
                                "type": "string",
                                "example": "11:35"
                              },
                              "date": {
                                "description": "Date of water",
                                "type": "string",
                                "example": "2024-09-02"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login a user with the provided credentials.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout a user",
        "operationId": "logoutUser",
        "description": "Logout the currently authenticated user.",
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refresh the session of the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/avatar": {
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Update user avatar",
        "operationId": "updateAvatar",
        "description": "Update the avatar of the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "The avatar image file to upload"
                  }
                },
                "required": [
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Avatar updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatarUrl": {
                          "type": "string",
                          "example": "http://example.com/uploads/avatar.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - Invalid session or token"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get user",
        "operationId": "getUser",
        "description": "Retrieve the user information of the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "60d0fe4f5311236168a109ca"
                    },
                    "userName": {
                      "type": "string",
                      "example": "User"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    },
                    "dailyNorma": {
                      "type": "number",
                      "example": 2000
                    },
                    "gender": {
                      "type": "string",
                      "enum": [
                        "Man",
                        "Woman"
                      ],
                      "example": "Man"
                    },
                    "photo": {
                      "type": "string",
                      "example": "http://example.com/photo.jpg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Internal Server"
          }
        }
      },
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Update user",
        "operationId": "updateUser",
        "description": "Update the user information of the currently authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "newUser@example.com"
                  },
                  "currentPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "oldPassword123"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "newPassword123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password",
                    "example": "newPassword123"
                  },
                  "userName": {
                    "type": "string",
                    "example": "User"
                  },
                  "dailyNorma": {
                    "type": "number",
                    "example": 2000
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "Man",
                      "Woman"
                    ],
                    "example": "Man"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset the password of the user using the provided token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password has been successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Not Implemented",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Not Implemented"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset password",
        "operationId": "resetUserPassword",
        "description": "Reset the password of the user using the provided token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Google OAuth URL",
        "operationId": "getGoogleOAuthUrl",
        "description": "Retrieve the Google OAuth URL for authentication",
        "responses": {
          "200": {
            "description": "Successfully retrieved Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Google OAuth URL"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/confirm-oauth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Confirm Google OAuth",
        "operationId": "confirmGoogleOAuth",
        "description": "Confirm Google OAuth authentication and login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Google OAuth code"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in via Google OAuth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Something went wrong",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "monthlyWater": {
        "type": "object",
        "required": [
          "date",
          "totalAmount",
          "servings",
          "dailyNorma",
          "fullfilment"
        ],
        "properties": {
          "date": {
            "description": "Date",
            "type": "string",
            "example": "2, September"
          },
          "totalAmount": {
            "description": "Total amount of water intake per day (ml)",
            "type": "number",
            "example": 1200
          },
          "servings": {
            "description": "Total amount of servings water per day",
            "type": "number",
            "example": 5
          },
          "dailyNorma": {
            "description": "Daily water intake norma selected by the user",
            "type": "number",
            "example": 1500
          },
          "fullfilment": {
            "description": "Percentage of daily water",
            "type": "number",
            "example": 50
          }
        }
      },
      "RegisterUserRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "example": "User"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "60d0fe4f5311236168a109ca"
          },
          "userName": {
            "type": "string",
            "example": "User"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "dailyNorma": {
            "type": "number",
            "example": 2000
          },
          "gender": {
            "type": "string",
            "enum": [
              "Man",
              "Woman"
            ],
            "example": "Man"
          },
          "photo": {
            "type": "string",
            "example": "http://example.com/photo.jpg"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "User profile updated successfully"
          }
        }
      }
    }
  }
}